---
page_title: "Provider: Mist"
description: |-
    The Mist Provider allows Terraform to manage Juniper Mist.
---

# {{ .ProviderShortName | title }} Provider

{{ .Description }}

## Configuration

### Provider configuration stanza

{{ tffile "examples/provider/example.tf" }}

### Credentials

Users are encouraged to pass the API Token or the username and password via the 
environment variables (see below). If authentication information are provided 
in the provider configuration and in the environment variables, the Provider
configuration will be used.

Please consider whether writing credentials to a configuration file is
acceptable in your environment.

### Proxy Support

HTTP, HTTPS, and SOCKS5 proxies are supported through the `MIST_PROXY` environment
 variables or the `proxy` provider configuration attribute.

{{ .SchemaMarkdown | trimspace }}

### Environment Variables

| Varibale Name | Provider attribute | Type | Description |
| ---- | ---- | ---- | ---- |
| `MIST_HOST` | `host` | String | URL of the Mist Cloud, e.g. `api.mist.com`. See above for the list of supported Clouds.|
| `MIST_API_TOKEN` | `apitoken` | String | For API Token authentication, the Mist API Token. |
| `MIST_USERNAME` | `username` | String | For username/password authentication, the Mist Account password. |
| `MIST_PASSWORD` | `password` | String | For username/password authentication, the Mist Account password. |
| `MIST_PROXY` | `proxy` | String | Requests use the configured proxy to reach the Mist Cloud. The value may be either a complete URL or a `[username:password@]host[:port]`, in which case the `http` scheme is assumed. The schemes `http`, `https`, and `socks5` are supported. |
| `MIST_API_TIMEOUT` | `api_timeout` | Int | Timeout in seconds for completing API transactions with the Mist Cloud. Omit for default value of 10 seconds. Value of 0 results in infinite timeout. |
